---
- name: play 1 -> turning swap off persistently
  hosts: all
  remote_user: ansible
  become: yes
  tasks:
    - name: Turn swap off
      shell: swapoff -a

    - name: Comment out swap entry in fstab
      shell: sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

- name: play 2 -> switch SELinux mode from enforcing mode to permissive mode
  hosts: all
  remote_user: ansible
  become: yes
  tasks:
    - name: Set mode enforce to 0
      shell: setenforce 0

    - name: Set SELinux to permissive in config file
      shell: sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=permissive/g' /etc/sysconfig/selinux

- name: play 3 -> configuring firewalld for k8s services
  hosts: all
  remote_user: ansible
  become: yes
  tasks:
    - name: Allow k8s services in firewalld (tcp)
      ansible.posix.firewalld:
        port: "{{ item }}/tcp"
        immediate: true
        permanent: true
        state: enabled
      loop:
        - 6443
        - 2379
        - 2380
        - 10250
        - 10251
        - 10252
        - 10257
        - 10259
        - 179

    - name: Allow k8s services in firewalld (udp)
      ansible.posix.firewalld:
        port: "{{ item }}/udp"
        immediate: true
        permanent: true
        state: enabled
      loop:
        - 4789

- name: play 4 -> loading kernel modules permanently and adding to containerd and configuring network kernel modules
  hosts: all
  remote_user: ansible
  become: yes
  tasks:
    - name: Add kernel modules using modprobe permanently
      community.general.modprobe:
        name: "{{ item }}"
        persistent: present
        state: present
      loop:
        - overlay
        - br_netfilter

    - name: Ensure necessary kernel modules are loaded for containerd
      copy:
        dest: /etc/modules-load.d/containerd.conf
        content: |
          overlay
          br_netfilter

    - name: Ensure sysctl parameters are set for Kubernetes networking (IPv4)
      ansible.builtin.sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1
        state: present

    - name: Ensure sysctl parameters are set for Kubernetes networking (IPv4 forwarding)
      ansible.builtin.sysctl:
        name: net.ipv4.ip_forward
        value: 1
        state: present

    - name: Ensure sysctl parameters are set for Kubernetes networking (IPv6)
      ansible.builtin.sysctl:
        name: net.bridge.bridge-nf-call-ip6tables
        value: 1
        state: present

    - name: Apply sysctl parameters
      shell: sysctl --system

- name: play 5 -> preparing the container runtime on nodes
  hosts: all
  remote_user: ansible
  become: yes
  tasks:
    - name: Install yum-utils
      yum:
        name: yum-utils
        state: present

    - name: Add containerd YUM repository
      shell:  yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      #ansible.builtin.yum_repository:
        #name: containerd.io
        #description: containerd.io
        #baseurl: https://download.docker.com/linux/centos/docker-ce.repo

    - name: Install containerd
      yum:
        name: containerd.io
        state: latest

    - name: Ensure containerd has the default configs
      shell: containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1

    - name: Set SystemdCgroup to true in containerd config
      shell: sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

    - name: Restart and enable containerd service
      service:
        name: containerd
        state: restarted
        enabled: yes

- name: play 6 -> installing kubernetes on nodes
  hosts: all
  remote_user: ansible
  become: yes
  tasks:
    - name: Add Kubernetes YUM repository
      ansible.builtin.yum_repository:
        name: kubernetes
        description: Kubernetes Repository
        baseurl: https://pkgs.k8s.io/core:/stable:/v1.30/rpm/
        gpgcheck: yes
        gpgkey: https://pkgs.k8s.io/core:/stable:/v1.30/rpm/repodata/repomd.xml.key
        enabled: yes

    - name: Install kubelet, kubeadm, and kubectl
      ansible.builtin.yum:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: latest

    - name: Enable and start kubelet
      service:
        name: kubelet
        enabled: yes
        state: started
