- name: < Play 1 > ==> PREPARING SYSTEM CONFIGURATION
  hosts: all
  remote_user: ansible
  become: yes
  tasks:
  - name: Turning off the swap memory...
    shell: swapoff -a
  - name: Commenting out the swap entry in fstab...
    shell: sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
    #replace:
- name: < Play 2 > ==> CONFIGURING THE REDHAT SYSTEM SECURITY POLICIES
  #path: /etc/fstab
  #regexp: "/swap.img"
  #replace: "#swap.img"
  #backup: yes

  hosts: all
  remote_user: ansible
  become: yes
  tasks:
  - name: Setting SELinux mode from enforcing mode to permissive mode...
    shell: setenforce 0
  - name: Setting SELinux mode presistently...
    shell: sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=permissive/g' /etc/sysconfig/selinux

- name: < Play 3 > ==> CONFIGURE THE NETWORK SECURITY POLICIES
  hosts: all
  remote_user: ansible
  become: yes
  tasks:
  - name: Allowing k8s services in firewalld (tcp)
    ansible.posix.firewalld:
      port: "{{ item }}/tcp"
      immediate: true
      permanent: true
      state: enabled
    #with_items:
    loop:
    - 6443
    - 2379
    - 2380
    - 10250
    - 10251
    - 10252
    - 10257
    - 10259
    - 179
  - name: Allowing k8s services in firewalld (udp)
    ansible.posix.firewalld:
      port: "{{ item }}/udp"
      immediate: true
      permanent: true
      state: enabled
    loop:
    - 4789

- name: < Play 4 > ==> CONFIGURING THE SYSTEM KERNEL MODULES
  hosts: all
  remote_user: ansible
  become: yes
  tasks:
  - name: Persisting the required kernel modules...
    community.general.modprobe:
      name: "{{ item }}"
      persistent: present
      state: present
    loop:
    - overlay
    - br_netfilter
  - name: Ensuring necessary kernel modules are loaded for containerd...
    copy:
      dest: /etc/modules-load.d/containerd.conf
      content: |
        overlay
        br_netfilter
  - name: Ensuring sysctl parameters are set that are required for k8s networking (IPv4)...
    ansible.builtin.sysctl:
      name: net.bridge.bridge-nf-call-iptables
      value: 1
      state: present
  - name: Ensure sysctl parameters are set that are required for k8s networking (IPv4 forwarding)...
    ansible.builtin.sysctl:
      name: net.ipv4.ip_forward
      value: 1
      state: present
  - name: Ensure sysctl parameters are set that are required for k8s networking (IPv6)...
    ansible.builtin.sysctl:
      name: net.bridge.bridge-nf-call-ip6tables
      value: 1
      state: present
  - name: Applying sysctl parameters...
    shell: sysctl --system

- name: < Play 5 > ==> INSTALL & PREPARE THE CONTAINER-RUNTIME ON NODES
  hosts: all
  remote_user: ansible
  become: yes
  tasks:
  - name: Installing yum-utils...
    yum:
      name: yum-utils
      state: present
  - name: Adding containerd YUM repository...
    shell: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    #ansible.builtin.yum_repository:
  - name: Installing containerd...
    #name: containerd.io
    #description: containerd.io
    #baseurl: https://download.docker.com/linux/centos/docker-ce.repo
    yum:
      name: containerd.io
      state: latest
  - name: Preserving the default config for containerd...
    shell: containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
  - name: Setting the "SystemdCgroup" to value "true" in containerd configs...
    shell: sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
    #lineinfile:
  - name: Restarting and enabling the containerd service...
    #path: /etc/containerd/config.toml"
    #regexp: ^\\s*SystemdCgroup\\s*=\\s*false"
    #line:"SystemdCgroup = true"
    service:
      name: containerd
      state: restarted
      enabled: yes

- name: < Play 6 > ==> INSTALLING KUBERNETES FILNALLY
  hosts: all
  remote_user: ansible
  become: yes
  tasks:
  - name: Adding the Kubernetes YUM repository...
    ansible.builtin.yum_repository:
      name: kubernetes
      description: Kubernetes Repository
      baseurl: https://pkgs.k8s.io/core:/stable:/v1.30/rpm/
      gpgcheck: yes
      gpgkey: https://pkgs.k8s.io/core:/stable:/v1.30/rpm/repodata/repomd.xml.key
      enabled: yes
  - name: Installing kubelet, kubeadm and kubectl...
    ansible.builtin.yum:
      name:
      - kubelet
      - kubeadm
      - kubectl
      state: latest
  - name: Enabling and startint kubelet...
    service:
      name: kubelet
      enabled: yes
      state: started
